/**
 * A Map of breakpoint values.
 */
$bp-values: (
  xl: 1024, // Arbitrary "desktop" width.
  lg: 783, // The point at which the admin layout changes.
  md: 600,
);

/**
 * Generate map of breakpoint values.
 */
@function _create-breakpoints() {
  $merged: ();

  @each $name, $value in $bp-values {
    $merged: map_merge($merged, (
      '#{$name}-min': 'min-width: #{$value / 16}rem',
      '#{$name}-max': 'max-width: #{($value - 1) / 16}rem',
    ));
  }

  @return $merged;
}

// Create the media-queries map.
$media-queries: _create-breakpoints();

/**
 * Retrive prepared media query
 * Ex. @media media(lg-min) {}
 *
 * @param {string} $key Key to acess in the $media-queries map.
 * @return {String|Boolean} The media query string or false if the key doesn't exist.
 */
@function media($key) {
  @if (not map-has-key($media-queries, $key)) {
    @error "$media-queries[#{$key}] doesn't exist.";
    @return false;
  }

  @return map-get($media-queries, $key);
}

/**
 * Retrive prepared min-width media query.
 * Ex. @media min(lg) {}
 *
 * @param  {String} $key Key to access in the $media-queries map.
 * @return {String|Boolean} The media query string or false if the key doesn't exist.
 */
@function min($key) {
  @return media(#{$key}-min);
}

/**
 * Retrive prepared max-width media query based on a given breakpoint minus 1px.
 * Ex. @media max(lg) {}
 *
 * @param  {String} $key Key to access in the $media-queries map.
 * @return {String|Boolean} The media query string or false if the key doesn't exist.
 */
@function max($key) {
  @return media(#{$key}-max);
}
